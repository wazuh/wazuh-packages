# Contributor: Wazuh, Inc <info@wazuh.com>
# Maintainer: Wazuh, Inc <info@wazuh.com>
pkgname="wazuh-agent"
pkgver="${version}"
pkgrel="${revision}"
pkgdesc="Wazuh helps you to gain security visibility into your infrastructure."
url="https://www.wazuh.com/"
arch="${architecture}"
license="GPL"
depends="busybox procps"
makedepends="make cmake git openssl-dev libgcc gcc automake autoconf libtool"
checkdepends=""
install="${pkgname}.pre-install ${pkgname}.post-install ${pkgname}.pre-upgrade ${pkgname}.post-upgrade ${pkgname}.pre-deinstall ${pkgname}.post-deinstall"
subpackages=""
source=""
builddir="${srcdir}"
options="!check"

build() {
  set -x
  cp -r /wazuh* ./
  cd wazuh*/src

  make deps TARGET=agent EXTERNAL_SRC_ONLY=yes
  make -j"${jobs}" TARGET=agent DEBUG="${debug}"

  cd ..
  echo 'USER_LANGUAGE="en"' > ./etc/preloaded-vars.conf
  echo 'USER_NO_STOP="y"' >> ./etc/preloaded-vars.conf
  echo 'USER_INSTALL_TYPE="agent"' >> ./etc/preloaded-vars.conf
  echo 'USER_DIR="${directory_base}"' >> ./etc/preloaded-vars.conf
  echo 'USER_DELETE_DIR="y"' >> ./etc/preloaded-vars.conf
  echo 'USER_ENABLE_ACTIVE_RESPONSE="y"' >> ./etc/preloaded-vars.conf
  echo 'USER_ENABLE_SYSCHECK="y"' >> ./etc/preloaded-vars.conf
  echo 'USER_ENABLE_ROOTCHECK="y"' >> ./etc/preloaded-vars.conf
  echo 'USER_ENABLE_OPENSCAP="n"' >> ./etc/preloaded-vars.conf
  echo 'USER_ENABLE_SYSCOLLECTOR="y"' >> ./etc/preloaded-vars.conf
  echo 'USER_ENABLE_CISCAT="y"' >> ./etc/preloaded-vars.conf
  echo 'USER_UPDATE="n"' >> ./etc/preloaded-vars.conf
  echo 'USER_AGENT_SERVER_IP="MANAGER_IP"' >> ./etc/preloaded-vars.conf
  echo 'USER_CA_STORE="/path/to/my_cert.pem"' >> ./etc/preloaded-vars.conf
  echo 'USER_AUTO_START="n"' >> ./etc/preloaded-vars.conf
  ./install.sh
}

package() {
  set -x
  rootdir="${builddir}/.."

  install -d "${pkgdir}/${directory_base}"
  sed -i "s|DIRECTORY_BASE|${directory_base}|g" "${rootdir}/${pkgname}.pre-install"
  sed -i "s|DIRECTORY_BASE|${directory_base}|g" "${rootdir}/${pkgname}.post-install"
  sed -i "s|DIRECTORY_BASE|${directory_base}|g" "${rootdir}/${pkgname}.pre-upgrade"
  sed -i "s|DIRECTORY_BASE|${directory_base}|g" "${rootdir}/${pkgname}.post-upgrade"
  sed -i "s|DIRECTORY_BASE|${directory_base}|g" "${rootdir}/${pkgname}.pre-deinstall"
  sed -i "s|DIRECTORY_BASE|${directory_base}|g" "${rootdir}/${pkgname}.post-deinstall"
  cp -a "${directory_base}"/* "${pkgdir}${directory_base}"

  package_files_dir="${pkgdir}${directory_base}/packages_files"
  mkdir -p "${pkgdir}${directory_base}/packages_files/src/init"
  mkdir -p "${pkgdir}${directory_base}/packages_files/etc/templates/config/generic/localfile-logs"
  mkdir -p "${pkgdir}${directory_base}/packages_files/etc/templates/config/alpine"
  cp -a /wazuh-wazuh*/gen_ossec.sh "${package_files_dir}"
  cp -a /wazuh-wazuh*/add_localfiles.sh "${package_files_dir}"
  cp -a /wazuh-wazuh*/src/init/dist-detect.sh "${package_files_dir}/src/init"
  cp -a /wazuh-wazuh*/src/init/shared.sh "${package_files_dir}/src/init"
  cp -a /wazuh-wazuh*/src/init/inst-functions.sh "${package_files_dir}/src/init"
  cp -a /wazuh-wazuh*/src/init/template-select.sh "${package_files_dir}/src/init"
  cp -a /wazuh-wazuh*/src/VERSION "${package_files_dir}/src"
  cp -a /wazuh-wazuh*/src/REVISION "${package_files_dir}/src"
  cp -a /wazuh-wazuh*/etc/templates/config/generic/* "${package_files_dir}/etc/templates/config/generic"
  cp -a /wazuh-wazuh*/etc/templates/config/alpine/* "${package_files_dir}/etc/templates/config/alpine"
}

