name: Shellcheck code analysis
on: [pull_request]

jobs:
  Get-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Get changes
        uses: jitterbit/get-changed-files@v1
        id: changed_files
        with:
          format: space-delimited
      - name: Set tools
        uses: './.github/actions/get-tools/'
        with: 
          tool: "${{ steps.changed_files.outputs.all }}"
      - name: Build matrix
        id: set-matrix
        run: |
          echo "::set-output name=tools_matrix::{\"include\":[${{ env.VAR }}]}"
      - name: Check matrix
        id: check-matrix
        run: |
          if [ -z '${{ env.VAR }}' ];then
            echo "::set-output name=empty_matrix::true"
          else
            echo "::set-output name=empty_matrix::false"
          fi
    outputs:
      tools_matrix: ${{ steps.set-matrix.outputs.tools_matrix }}
      empty_matrix: ${{ steps.check-matrix.outputs.empty_matrix }}
  
  Builder-scripts:
    name: Builder scripts artifacts
    runs-on: ubuntu-latest
    needs: Get-changes
    if: ${{ needs.Get-changes.outputs.empty_matrix != 'true' }}
    strategy:
      matrix: ${{ fromJson(needs.Get-changes.outputs.tools_matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Generate artifacts
        uses: './.github/actions/generate-artifacts/'
        with: 
          artifact: "${{ matrix.key }}"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts_generated
          path: |
            unattended_installer/*.sh
            !unattended_installer/builder.sh
      - name: Upload artifact
        if: contains(matrix.key, 'builder.sh')
        uses: actions/upload-artifact@v3
        with:
          name: artifacts_generated
          path: |
            unattended_installer/builder.sh
            
  Shellcheck-for-libraries:
    name: Shellcheck / runner for libraries
    runs-on: ubuntu-latest
    needs: Get-changes
    if: ${{ needs.Get-changes.outputs.empty_matrix != 'true' }}
    strategy:
      matrix: ${{ fromJson(needs.Get-changes.outputs.tools_matrix) }}
    steps:
      - uses: actions/checkout@v1
      - name: Shellcheck for libraries of artifacts
        uses: './.github/actions/shellcheck/'
        with: 
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: "${{ matrix.path }}"
          pattern: "*.sh"
          fail_on_error: "false"
  
  Shellcheck-for-artifacts:
    name: Shellcheck / runner for artifacts
    runs-on: ubuntu-latest
    needs: Builder-scripts
    steps:
      - uses: actions/checkout@v1
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Shellcheck for artifacts generated
        uses: './.github/actions/shellcheck/'
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
          path: "./artifacts_generated"
          pattern: "*.sh"
          fail_on_error: "false"
      - name: Get shellcheck output
        id: get-comment-body
        run: |
          body="$(cat output.md)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          echo "::set-output name=body::$body"
      - name: Comments into issue
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
