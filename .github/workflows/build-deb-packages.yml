name: Build Wazuh Packages - DEB - amd64 and i386
on:
  pull_request:
    paths:
      - 'debs/SPECS/**'
      - 'debs/generate_debian_package.sh'
  workflow_dispatch:
  workflow_call:

jobs:
  Wazuh-agent-deb-package-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        TYPE: [agent, manager]
        ARCHITECTURE : [amd64, i386]
        exclude:
          - TYPE: manager
            ARCHITECTURE: i386
      fail-fast: false

    steps:
      - name: Cancel previous runs
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_after_successful_duplicate: 'false'

      - uses: actions/checkout@v3

      - name: Get changed files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            deb_images:
              - 'debs/Debian/**'
              - 'debs/build.sh'
            deb_images_i386:
              - 'debs/Debian/i386/**'
              - 'debs/build.sh'
            deb_images_amd64:
              - 'debs/Debian/amd64/**'
              - 'debs/build.sh'
            deb_packages:
              - 'debs/SPECS/**'
              - 'debs/generate_debian_package.sh'

      - name: Set tag and container name
        if: steps.changes.outputs.deb_packages == 'true' || (steps.changes.outputs.deb_images_i386 == 'true' && matrix.ARCHITECTURE == 'i386') || (steps.changes.outputs.deb_images_amd64 == 'true' && matrix.ARCHITECTURE == 'amd64')
        run: |
          MAJOR=$(sed 's/\([0-9]*\.[0-9]*\)\.[0-9]*/\1/' $GITHUB_WORKSPACE/VERSION)
          if [ "${{ steps.changes.outputs.deb_images }}" == "true" ]; then echo "TAG=${{ github.head_ref }}" >> $GITHUB_ENV; else echo "TAG=$MAJOR" >> $GITHUB_ENV ; fi
          if [ $MAJOR == "4.6" ]; then echo "VERSION=master" >> $GITHUB_ENV $ ; else echo "VERSION=$MAJOR" >> $GITHUB_ENV; fi
          echo "CONTAINER_NAME=deb_builder_${{ matrix.ARCHITECTURE }}" >> $GITHUB_ENV

      - name: Download docker image for package building
        if: steps.changes.outputs.deb_packages == 'true' || (steps.changes.outputs.deb_images_i386 == 'true' && matrix.ARCHITECTURE == 'i386') || (steps.changes.outputs.deb_images_amd64 == 'true' && matrix.ARCHITECTURE == 'amd64')
        run: |
          bash $GITHUB_WORKSPACE/.github/actions/ghcr-pull-and-push/pull_image_from_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} $CONTAINER_NAME ${{ env.TAG }}

      - name: Build the ${{ matrix.ARCHITECTURE }} deb Wazuh ${{ matrix.TYPE }} package
        if: steps.changes.outputs.deb_packages == 'true' || (steps.changes.outputs.deb_images_i386 == 'true' && matrix.ARCHITECTURE == 'i386') || (steps.changes.outputs.deb_images_amd64 == 'true' && matrix.ARCHITECTURE == 'amd64')
        working-directory: ./debs
        run: |
          REVISION="${{ github.head_ref }}"
          bash generate_debian_package.sh -b ${{ env.VERSION }} -t ${{ matrix.TYPE }} -a ${{ matrix.ARCHITECTURE }} --dev -j 2 --dont-build-docker --tag ${{ env.TAG }} -r $REVISION
          echo "PACKAGE_NAME=$(ls ./output | grep .deb | head -n 1)" >> $GITHUB_ENV

      - name: Upload Wazuh ${{ matrix.TYPE }} ${{ matrix.ARCHITECTURE }} package as artifact
        if: steps.changes.outputs.deb_packages == 'true' || (steps.changes.outputs.deb_images_i386 == 'true' && matrix.ARCHITECTURE == 'i386') || (steps.changes.outputs.deb_images_amd64 == 'true' && matrix.ARCHITECTURE == 'amd64')
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ${{github.workspace}}/debs/output/${{ env.PACKAGE_NAME }}
          if-no-files-found: error