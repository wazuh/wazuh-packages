#!/bin/sh
# preinst script for Wazuh

set -e

# configuration variables
DIR="/var/ossec"
WAZUH_TMP_DIR="${DIR}/packages_files/manager_config_files"

# environment configuration
if [ ! -d ${WAZUH_TMP_DIR} ]; then
    mkdir -p ${WAZUH_TMP_DIR}
else
    rm -rf ${WAZUH_TMP_DIR}
    mkdir -p ${WAZUH_TMP_DIR}
fi

case "$1" in
    install|upgrade)

        if [ ! -z "$2" ] && [ ! -f ${DIR}/etc/ossec.conf ] ; then
            touch ${WAZUH_TMP_DIR}/create_conf
        fi
        # Force deleting the old ossec-init.conf and link
        rm -f /etc/ossec-init.conf

        if [ -z "$2" ]; then
          if [ -f ${DIR}/etc/ossec.conf ]; then
            cp  ${DIR}/etc/ossec.conf  ${DIR}/etc/ossec.conf.deborig
            chmod 0600 ${DIR}/etc/ossec.conf.deborig
            chown root:root ${DIR}/etc/ossec.conf.deborig

            echo "====================================================================================="
            echo "= Backup from your ossec.conf has been created at ${DIR}/etc/ossec.conf.deborig ="
            echo "= Please verify your ossec.conf configuration at ${DIR}/etc/ossec.conf          ="
            echo "====================================================================================="
          fi
        fi
        # Stop API service if it's running
        if ps aux | grep "${DIR}/api/app.js" | grep -v grep > /dev/null 2>&1; then
           touch ${WAZUH_TMP_DIR}/wazuh-api.restart
           if [ -n "$(ps -e | grep -E ^\ *1\ .*systemd$)" ]; then
              systemctl --quiet stop wazuh-api.service
           else
              service wazuh-api stop
           fi
        fi

        # Stop Authd if it is running
        if ps aux | grep ${DIR}/bin/ossec-authd | grep -v grep > /dev/null 2>&1; then
           kill `ps -ef | grep "${DIR}/bin/ossec-authd" | grep -v grep | awk '{print $2}'` > /dev/null 2>&1
        fi

        # Fix for forcing the stop of the api
        if ps aux | grep ${DIR}/api/app.js | grep -v grep > /dev/null 2>&1; then
            kill -9 `ps -ef | grep "${DIR}/api/app.js" | grep -v grep | awk '{print $2}'` > /dev/null 2>&1
        fi

        if [ -f ${DIR}/etc/ossec.conf ]; then
            cp -rp ${DIR}/etc/ossec.conf ${DIR}/etc/ossec.bck
        fi

        # Backup the agent groups
        # Prepare the shared files for 3.x versions if you are upgrading from 2.x
        if [ "$1" = "upgrade" ] ; then

            if [ ! -d ${DIR}/etc/shared/default ]; then
              mkdir -p  ${DIR}/etc/shared/default
              chown ossec:ossec ${DIR}/etc/shared/default
              chmod -R 770 ${DIR}/etc/shared/default
              find ${DIR}/etc/shared -maxdepth 1 -type f \( -name "*.txt" -o -name "merged.mg" \) -exec cp -rp {} ${DIR}etc/shared/default \;
              find ${DIR}/etc/shared -maxdepth 1 -type f \( -name "*.txt" -o -name "merged.mg" \) -exec rm {} \;
            fi

            cp -rp ${DIR}/etc/shared ${WAZUH_TMP_DIR}/group
        fi

        # Back up the cluster.json >= 3.2.3
        if [ -f ${DIR}/framework/wazuh/cluster/cluster.json ]; then
            cp ${DIR}/framework/wazuh/cluster/cluster.json ${WAZUH_TMP_DIR}/cluster.json
        fi

        # Delete old service
        if [ -f /etc/init.d/ossec ]; then
          rm /etc/init.d/ossec
        fi
        if [ -d ${DIR}/etc/lists ]; then
          cp -rp ${DIR}/etc/lists ${WAZUH_TMP_DIR}/lists
        fi
        if [ -f ${DIR}/etc/client.keys ]; then
          cp -p ${DIR}/etc/client.keys ${WAZUH_TMP_DIR}/client.keys
        fi
        if [ -f ${DIR}/etc/local_internal_options.conf ]; then
            cp -p ${DIR}/etc/local_internal_options.conf ${WAZUH_TMP_DIR}/local_internal_options.conf
        fi

        if [ -f ${DIR}/etc/rules/local_rules.xml ]; then
            cp -p ${DIR}/etc/rules/local_rules.xml ${WAZUH_TMP_DIR}/local_rules.xml
        fi

        if [ -f ${DIR}/etc/decoders/local_decoder.xml ]; then
            cp -p ${DIR}/etc/decoders/local_decoder.xml ${WAZUH_TMP_DIR}/local_decoder.xml
        fi

        if [ -f ${DIR}/etc/ossec.conf ]; then
            cp -p ${DIR}/etc/ossec.conf ${WAZUH_TMP_DIR}/ossec.conf
        fi

        if [ -f ${DIR}/etc/sslmanager.cert ]; then
          cp -p ${DIR}/etc/sslmanager.cert ${WAZUH_TMP_DIR}/sslmanager.cert
        fi

        if [ -f ${DIR}/etc/sslmanager.key ]; then
          cp -p ${DIR}/etc/sslmanager.key ${WAZUH_TMP_DIR}/sslmanager.key
        fi

        if [ -d ${DIR}/var/db/agents ]; then
          rm -f ${DIR}/var/db/agents/*
        fi
    ;;

    abort-upgrade)

    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 0

    ;;

esac

exit 0
